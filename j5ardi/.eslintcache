[{"/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/App.js":"1","/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/reportWebVitals.js":"2","/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/index.js":"3","/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/components/Arduino.js":"4"},{"size":528,"mtime":1608229364158,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1608229364160,"results":"7","hashOfConfig":"6"},{"size":543,"mtime":1608229847502,"results":"8","hashOfConfig":"6"},{"size":2033,"mtime":1608229901264,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w6dg2c",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/App.js",[],"/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/reportWebVitals.js",[],"/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/index.js",["19"],"/Users/stewwest/git/arduino/j5-arduino-react/j5ardi/src/components/Arduino.js",["20"],"import React from 'react';\n\nconst Arduino = () => {\n  const five = require(\"johnny-five\");\n  const board = new five.Board();\n\n  board.on(\"ready\", function () {\n    // I've put 3 separate LEDs on Digital pins 3 Blue, 5 Green, 6 Red.\n    // And a rgb LED, controlled by 9, 10 , 11.\n    const rgb = new five.Led.RGB([9, 10, 11]);\n\n    // Create a new `photoresistor` hardware instance on Analog 2.\n    const photoresistor = new five.Sensor({\n      pin: \"A2\",\n      freq: 5000\n    });\n\n    // Inject the `sensor` hardware into\n    // the Repl instance's context;\n    // allows direct command line access\n    // board.repl.inject({\n    //   pot: photoresistor\n    // });\n\n    // \"data\" get the current reading from the photoresistor\n    photoresistor.on(\"data\", () => {\n      console.log(photoresistor.value);\n    });\n\n    let index = 0;\n    const rainbow = [\"FF0000\", \"FF7F00\", \"FFFF00\", \"00FF00\", \"0000FF\", \"4B0082\", \"8F00FF\"];\n    // Raibow RGA LED\n    const rgbOn = new five.Leds([12]);\n    // Array of the single LEDs.\n    const array = new five.Leds([3, 5, 6]);\n    // const blue = new five.Leds([3]);\n    // const green = new five.Leds([5]);\n    // const red = new five.Leds([6]);\n\n    const rainbox = function () {\n      rgbOn.on();\n\n      board.loop(250, () => {\n        rgb.color(rainbow[index++]);\n        if (index === rainbow.length) {\n          index = 0;\n        }\n      });\n\n      setTimeout(() => {\n        rgbOn.off();\n      }, 5000);\n      console.log('Ended Rainbow');\n    }\n\n    /**\n     *\n     * @param {*} colour\n     * usage example: pulseLed(green);\n     */\n    const pulseLed = function (colour) {\n      colour.pulse();\n\n      setTimeout(function () {\n        colour.stop().off();\n      }, 5000);\n    }\n\n    // Turn on Rainbow.\n    // To turn off: array.stop().off();\n    rainbox();\n\n    pulseLed(array);\n\n    board.on(\"exit\", () => {\n      // Turn off the rgb LED.\n      rgbOn.off();\n      // Turn off each led in the array of individual leds.\n      array.stop().off();\n    });\n  });\n}\n\nexport default Arduino;\n",{"ruleId":"21","severity":1,"message":"22","line":5,"column":8,"nodeType":"23","messageId":"24","endLine":5,"endColumn":15},{"ruleId":"21","severity":1,"message":"25","line":1,"column":8,"nodeType":"23","messageId":"24","endLine":1,"endColumn":13},"no-unused-vars","'Arduino' is defined but never used.","Identifier","unusedVar","'React' is defined but never used."]